version: '3.9'
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ messaging port
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  gateway:
    build:
      context: ./
      dockerfile: ./apps/gateway/Dockerfile
    container_name: gateway
    ports:
      - "3000:3000" # Gateway HTTP port
    env_file:
      - .env
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  user-service:
    build:
      context: ./
      dockerfile: ./apps/user/Dockerfile
    container_name: user-service
    env_file:
      - .env
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  authentication-service:
    build:
      context: ./
      dockerfile: ./apps/authentication/Dockerfile
    container_name: authentication-service
    env_file:
      - .env
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  notification-service:
    build:
      context: ./
      dockerfile: ./apps/notification/Dockerfile
    container_name: notification-service
    env_file:
      - .env
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

